name: Automated Release

on:
  push:
    paths-ignore:
      - '!pom.xml'
      - '**'
    branches-ignore:
      - '!master'
      - '**'

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
        
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build with Maven
      run: |
        export MVN_ARGS="-DbuildNumberSuffix="
        mvn ${MVN_ARGS} package
        echo "FILENAME=$(mvn ${MVN_ARGS} org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.build.finalName -q -DforceStdout)" >> $GITHUB_ENV

    - name: Get version from pom XML
      id: getxml
      uses: mavrosxristoforos/get-xml-info@1.0
      with:
        xml-file: 'pom.xml'
        xpath: '/project/version/text()'

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.getxml.outputs.info }}
        release_name: TuinityPerPlayerViewDist v${{ steps.getxml.outputs.info }}
        body_path: release.md
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./target/${{ env.FILENAME }}.jar
        asset_name: ${{ env.FILENAME }}.jar
        asset_content_type: application/java-archive